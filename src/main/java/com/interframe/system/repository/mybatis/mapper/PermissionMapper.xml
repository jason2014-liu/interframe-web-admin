<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.interframe.system.repository.mybatis.PermissionMapper">
  <resultMap id="BaseResultMap" type="com.interframe.system.repository.mybatis.model.Permission">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="LEVEL" jdbcType="CHAR" property="level" />
    <result column="TYPE" jdbcType="CHAR" property="type" />
    <result column="URL" jdbcType="VARCHAR" property="url" />
    <result column="ACTION" jdbcType="CHAR" property="action" />
    <result column="PARENT_ID" jdbcType="VARCHAR" property="parentId" />
    <result column="VALID" jdbcType="CHAR" property="valid" />
    <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, LEVEL, TYPE, URL, ACTION, PARENT_ID, VALID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from HR.SYS_PERMISSION
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from HR.SYS_PERMISSION
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.interframe.system.repository.mybatis.model.Permission">
    insert into HR.SYS_PERMISSION (ID, LEVEL, TYPE, URL, 
      ACTION, PARENT_ID, VALID)
    values (#{id,jdbcType=VARCHAR}, #{level,jdbcType=CHAR}, #{type,jdbcType=CHAR}, #{url,jdbcType=VARCHAR}, 
      #{action,jdbcType=CHAR}, #{parentId,jdbcType=VARCHAR}, #{valid,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.interframe.system.repository.mybatis.model.Permission">
    insert into HR.SYS_PERMISSION
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="level != null">
        LEVEL,
      </if>
      <if test="type != null">
        TYPE,
      </if>
      <if test="url != null">
        URL,
      </if>
      <if test="action != null">
        ACTION,
      </if>
      <if test="parentId != null">
        PARENT_ID,
      </if>
      <if test="valid != null">
        VALID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=CHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="action != null">
        #{action,jdbcType=CHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.interframe.system.repository.mybatis.model.Permission">
    update HR.SYS_PERMISSION
    <set>
      <if test="level != null">
        LEVEL = #{level,jdbcType=CHAR},
      </if>
      <if test="type != null">
        TYPE = #{type,jdbcType=CHAR},
      </if>
      <if test="url != null">
        URL = #{url,jdbcType=VARCHAR},
      </if>
      <if test="action != null">
        ACTION = #{action,jdbcType=CHAR},
      </if>
      <if test="parentId != null">
        PARENT_ID = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        VALID = #{valid,jdbcType=CHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.interframe.system.repository.mybatis.model.Permission">
    update HR.SYS_PERMISSION
    set LEVEL = #{level,jdbcType=CHAR},
      TYPE = #{type,jdbcType=CHAR},
      URL = #{url,jdbcType=VARCHAR},
      ACTION = #{action,jdbcType=CHAR},
      PARENT_ID = #{parentId,jdbcType=VARCHAR},
      VALID = #{valid,jdbcType=CHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <select id="findModulesByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select p.*
	from sys_user_role ur,sys_role_permission rp,sys_permission p
	where rp.PEMISSION_ID = p.ID
	and ur.ROLE_ID = rp.ROLE_ID
	and ur.USER_ID = #{userId,jdbcType=VARCHAR}
	and p.VALID = 0
	and p.TYPE = 1 and p.URL is NULL
  </select>
  <select id="findMenusByUserId" parameterType="map" resultMap="BaseResultMap">
    select p.*
	from sys_user_role ur,sys_role_permission rp,sys_permission p
	where rp.PEMISSION_ID = p.ID
	and ur.ROLE_ID = rp.ROLE_ID
	and ur.USER_ID = #{map.userId,jdbcType=VARCHAR}
	and p.VALID = 0
	and p.TYPE = 1 and p.URL is not null
  </select>
</mapper>